// <auto-generated />
using CyprusTaxCalculator.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CyprusTaxCalculator.DAL.Migrations
{
    [DbContext(typeof(TaxDbContext))]
    [Migration("20250805133838_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CyprusTaxCalculator.DAL.Entities.DeductionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DeductionType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LimitType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("LimitValue")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("DeductionRules");
                });

            modelBuilder.Entity("CyprusTaxCalculator.DAL.Entities.TaxBracket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("MaxIncome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MinIncome")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("TaxBrackets");
                });
#pragma warning restore 612, 618
        }
    }
}
